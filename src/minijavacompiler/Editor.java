/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package minijavacompiler;

import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucas
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */
    public Editor() {
        initComponents();
    }
    public static void printOutput(String outputString) {
        outputTextArea.append(outputString + "\n");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        compileButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        fileNew = new javax.swing.JMenuItem();
        fileOpen = new javax.swing.JMenuItem();
        fileClose = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        exit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(2048, 2048));
        setMinimumSize(new java.awt.Dimension(1024, 768));

        inputTextArea.setEditable(false);
        inputTextArea.setBackground(java.awt.Color.lightGray);
        inputTextArea.setColumns(20);
        inputTextArea.setLineWrap(true);
        inputTextArea.setRows(5);
        inputTextArea.setPreferredSize(new java.awt.Dimension(175, 90));
        jScrollPane1.setViewportView(inputTextArea);

        jLabel1.setText("Input");

        jLabel2.setText("Output");

        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        outputTextArea.setEditable(false);
        outputTextArea.setBackground(java.awt.Color.lightGray);
        outputTextArea.setColumns(20);
        outputTextArea.setLineWrap(true);
        outputTextArea.setRows(5);
        outputTextArea.setMaximumSize(new java.awt.Dimension(300, 300));
        outputTextArea.setMinimumSize(new java.awt.Dimension(300, 300));
        jScrollPane3.setViewportView(outputTextArea);

        compileButton.setText("Compile");
        compileButton.setEnabled(false);
        compileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.setEnabled(false);
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        fileNew.setText("New");
        fileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNewActionPerformed(evt);
            }
        });
        jMenu1.add(fileNew);

        fileOpen.setText("Open");
        fileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileOpenActionPerformed(evt);
            }
        });
        jMenu1.add(fileOpen);

        fileClose.setText("Close");
        fileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCloseActionPerformed(evt);
            }
        });
        jMenu1.add(fileClose);

        jMenuBar1.add(jMenu1);

        about.setText("About");
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });
        jMenuBar1.add(about);

        exit.setText("Exit");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        jMenuBar1.add(exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addGap(3, 3, 3)
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compileButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(compileButton)
                    .addComponent(editButton)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void fileNewActionPerformed(java.awt.event.ActionEvent evt) {                                        
        inputTextArea.setText("//Insira seu texto aqui");
        inputTextArea.setEditable(true);
        inputTextArea.setBackground(Color.WHITE);
        saveButton.setEnabled(true);
    }                                       

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {                                  
            System.exit(0);    // TODO add your handling code here:
    }                                 

    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {                                   
        JFrame frame = new JFrame("About");
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame.setSize(225,200);
        frame.setMaximumSize(new java.awt.Dimension(250, 200));
        frame.setMinimumSize(new java.awt.Dimension(250, 200));
        frame.setLocationRelativeTo(null);
        frame.setResizable(false);
        javax.swing.JTextArea aboutWindow;
        aboutWindow = new javax.swing.JTextArea();
        aboutWindow.setColumns(20);
        aboutWindow.setRows(5);
        aboutWindow.setBackground(Color.LIGHT_GRAY);
        aboutWindow.setText("\nTrabalho de Compiladores\n\nAlunos:\n\nBruno Pavarine\nJonatas de Oliveira‚Äè\nLucas Heck");
        aboutWindow.setEditable(false);
        frame.add(aboutWindow);
        frame.setVisible(true);
    }                                  

    private void fileCloseActionPerformed(java.awt.event.ActionEvent evt) {                                          
        outputTextArea.setText("");
        inputTextArea.setText("");
        inputTextArea.setEditable(false);
        inputTextArea.setBackground(Color.LIGHT_GRAY);
        saveButton.setEnabled(false);
        editButton.setEnabled(false);
        compileButton.setEnabled(false);
    }                                         

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        JFrame parentFrame = new JFrame();
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");   

        int userSelection = fileChooser.showSaveDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try {
                FileWriter fw = new FileWriter(fileToSave);
                fw.write(inputTextArea.getText());
                fw.close();
                inputTextArea.setEditable(false);
                inputTextArea.setBackground(Color.LIGHT_GRAY);
                saveButton.setEnabled(false);
                editButton.setEnabled(true);
                compileButton.setEnabled(true);
            } catch (Exception ex) {
                  ex.printStackTrace();
            }
            System.out.println("Save as file: " + fileToSave.getAbsolutePath());
        }
    }                                          

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        inputTextArea.setEditable(true);
        inputTextArea.setBackground(Color.WHITE);
        editButton.setEnabled(false);
        saveButton.setEnabled(true);
        compileButton.setEnabled(false);
    }                                          

    private void fileOpenActionPerformed(java.awt.event.ActionEvent evt) {                                         
        JFileChooser jFileChooser=new JFileChooser();
        StringBuffer buffer;
        String buff;
        int lenght;
        buffer = new StringBuffer();
        int result= jFileChooser.showOpenDialog(this);
        if(result==JFileChooser.APPROVE_OPTION)
        {
            try {
                FileReader reader;
                reader = null;
                File file=jFileChooser.getSelectedFile();
                reader=new FileReader(file);
                int i=1;
                while(i!=-1)
                {
                    try {
                        i=reader.read();
                    } catch (IOException ex) {
                        Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    char ch=(char) i;
                    buffer.append(ch);    
                }
                //System.out.println(buffer.substring(0, -1));
                //System.out.println(buffer.substring(0, 179));
                lenght = buffer.length()-1;
                inputTextArea.setText(buffer.substring(0, lenght));
                editButton.setEnabled(true);
                saveButton.setEnabled(false);
                compileButton.setEnabled(true);
                inputTextArea.setEditable(false);
                inputTextArea.setBackground(Color.LIGHT_GRAY);
            } catch (FileNotFoundException e) {
            }
        }
    }                                        

    private void compileButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        //System.out.println(inputTextArea.getText());
        Parser parser = new Parser(inputTextArea.getText());
        parser.execute();
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenu about;
    private javax.swing.JButton compileButton;
    private javax.swing.JButton editButton;
    private javax.swing.JMenu exit;
    private javax.swing.JMenuItem fileClose;
    private javax.swing.JMenuItem fileNew;
    private javax.swing.JMenuItem fileOpen;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTextArea outputTextArea;
    private javax.swing.JButton saveButton;
    // End of variables declaration                   
}
